name: Npm - Publish (GitHub Registry)
on:
  workflow_call:
    secrets:
      github-token:
        description: 'The GitHub PAT token to perform checkout and publish.'
        required: true
      cache-version:
        description: 'The Cache version.'
        required: true
    inputs:
      project-name:
        description: 'The name of the project to build. Must match the directory name.'
        required: true
        type: string
      prerelease-versions-kept:
        description: 'The number of pre-release versions kept in the GitHub registry.'
        required: false
        type: number
        default: 10

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_AUTH_TOKEN: ${{secrets.github-token}}
    
    steps:
      - name: 🛎 Checkout
        uses: actions/checkout@v3
      - name: 🟩 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: '@unosquare'
      - name: 📦 Cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-${{ secrets.cache-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-
      - name: 🤠 npm install
        run: npm ci
      - name: 🏗 Build
        run: npm run build
      - name: 👌 Bump level
        uses: haya14busa/action-cond@v1
        id: level
        with:
          cond: ${{ github.ref == 'refs/heads/dev' }}
          if_true: "patch"
          if_false: "minor"
      - name: 🐝 Bump version
        uses: unosquare/bump-npm-version@master
        with:
          level: ${{ steps.level.outputs.value }}
      - name: 🍱 Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.github-token }}" > ~/.npmrc
          npm publish
      - name: 📌 Commit
        uses: EndBug/add-and-commit@v7.4.0
        with:
          author_email: geovanni.perez@gmail.com
          author_name: geoperez
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
      - name: 🌿 Clean up stale packages
        uses: actions/delete-package-versions@v3
        with: 
          package-name: ${{ inputs.project-name }}
          min-versions-to-keep: ${{ inputs.prerelease-versions-kept }}
          delete-only-pre-release-versions: 'true'
      